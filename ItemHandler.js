
const Item = require('./model/Item');
// TODO: The list must be persisted in a DB, no in memory

class ItemHandler {
  constructor() {
    // TODO: Remove once the list is in the DB
    this.list = [];
  }

  getList() {
    return [...this.list];
  }

  // TODO: The creation of the item should not require the id, because that is generated by the DB
  createNewItem({ name }) {
    const id = Math.random().toString(36).substring(2, 5);
    const newItem = new Item(id, name);

    this.list.push(newItem);
    return newItem;
  }

  modifyItem(itemId, { name }) {
    const indexModifiedItem = this.list.findIndex(previousItem => previousItem.id === itemId);

    this.list[indexModifiedItem].name = name;
    return this.list[indexModifiedItem];
  }

  removeItemOfList(id) {
    const filterList = this.list.filter(item => item.id !== id);
    this.list = filterList;
  }
}

module.exports = ItemHandler;
